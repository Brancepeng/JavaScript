

javascript engine(javsscript 引擎或者称为解释器):

 在计算机科学中，解释器（或者引擎）是一个计算机程序，立即执行的计算机程序。它执行的是在编程或者脚本语言中

 编写的指令，而不需要预先编译成机器语言（即二进制字节码）。

一个解释器通常如下几种策略来执行程序：

1.解析源码，然后直接执行它的行为；
parse the source code and perform its behavior directly.

2.将源代码转换成一些高效的中间表达（intermediate representation ），立即执行这个。（通俗点说：就是边解释边执行。）
translate source code into some efficient intermediate representation and immediately execute this.

科普一下：intermediate representation：中间表达：

一个中间表达是通过编译器或者虚拟机来呈现源码的给内部使用的数据结构或者代码。

3.明确执行存储预编译代码，其中这个编译器也是解释器系统的一部分。
explicitly execute stored precompiled code[1] made by a compiler which is part of the interpreter system.


Early versions of Lisp programming language and Dartmouth BASIC would be examples of the first type.
Perl, Python, MATLAB, and Ruby are examples of the second, while UCSD Pascal is an example of the
third type. Source programs are compiled ahead of time and stored as machine independent code, which
 is then linked at run-time and executed by an interpreter and/or compiler (for JIT systems). Some
 systems, such as Smalltalk, contemporary versions of BASIC, Java and others may also combine two
 and three.


link在computing中的概念：
In computing, a linker or link editor is a computer program that takes one or more object files
generated by a compiler and combines them into a single executable file, library file, or another
object file.


complile在computing中的概念

A compiler is a computer program (or a set of programs) that transforms source code written in a
 programming language (the source language) into another computer language (the target language),
 with the latter often having a binary form known as object code.[1] The most common reason for
 converting source code is to create an executable program.

The name "compiler" is primarily used for programs that translate source code from a high-level
programming language to a lower level language (e.g., assembly language or machine code). If the
compiled program can run on a computer whose CPU or operating system is different from the one on
which the compiler runs, the compiler is known as a cross-compiler. More generally, compilers are
a specific type of translator.




编译和解释是编程语言实现的两种主要的方式，他们并不是相互排斥的，就像大多数解释系统还执行一些翻译工作，就像编译器。


解释型和编译型语言的异同点;

由高级语言编写的程序要么由某些解释器直接执行，要么

